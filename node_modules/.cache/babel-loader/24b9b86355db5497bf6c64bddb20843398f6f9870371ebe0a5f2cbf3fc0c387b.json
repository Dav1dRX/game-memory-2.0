{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David Maguire\\\\gaming\\\\src\\\\components\\\\ScoreBoard\\\\ScoreBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreBoard = () => {\n  _s();\n  const [scores, setScores] = useState({\n    singlePlayer: [],\n    multiPlayer: []\n  });\n  useEffect(() => {\n    // Cargar puntuaciones del localStorage\n    const savedScores = JSON.parse(localStorage.getItem('highScores') || '{\"singlePlayer\":[],\"multiPlayer\":[]}');\n    setScores(savedScores);\n  }, []);\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString();\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"w-full max-w-md mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        className: \"text-center\",\n        children: \"Mejores Puntuaciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        defaultValue: \"singlePlayer\",\n        children: [/*#__PURE__*/_jsxDEV(TabsList, {\n          className: \"grid w-full grid-cols-2\",\n          children: [/*#__PURE__*/_jsxDEV(TabsTrigger, {\n            value: \"singlePlayer\",\n            children: \"Un Jugador\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabsTrigger, {\n            value: \"multiPlayer\",\n            children: \"Multijugador\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabsContent, {\n          value: \"singlePlayer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: scores.singlePlayer.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center p-2 bg-gray-50 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: score.playerName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: [score.score, \" pts\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-gray-400\",\n                children: formatDate(score.date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabsContent, {\n          value: \"multiPlayer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: scores.multiPlayer.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center p-2 bg-gray-50 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium\",\n                  children: score.winner\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500\",\n                  children: [\"vs \", score.loser]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: [score.score, \" pts\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-gray-400\",\n                children: formatDate(score.date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(ScoreBoard, \"U+IPiv6ZlfNLecEsEClBg0tGwCg=\");\n_c = ScoreBoard;\nexport default ScoreBoard;\nvar _c;\n$RefreshReg$(_c, \"ScoreBoard\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardHeader","CardTitle","CardContent","Tabs","TabsList","TabsTrigger","TabsContent","jsxDEV","_jsxDEV","ScoreBoard","_s","scores","setScores","singlePlayer","multiPlayer","savedScores","JSON","parse","localStorage","getItem","formatDate","dateString","Date","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","value","map","score","index","playerName","date","winner","loser","_c","$RefreshReg$"],"sources":["C:/Users/David Maguire/gaming/src/components/ScoreBoard/ScoreBoard.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\r\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';\r\n\r\nconst ScoreBoard = () => {\r\n  const [scores, setScores] = useState({\r\n    singlePlayer: [],\r\n    multiPlayer: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Cargar puntuaciones del localStorage\r\n    const savedScores = JSON.parse(localStorage.getItem('highScores') || '{\"singlePlayer\":[],\"multiPlayer\":[]}');\r\n    setScores(savedScores);\r\n  }, []);\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  return (\r\n    <Card className=\"w-full max-w-md mx-auto\">\r\n      <CardHeader>\r\n        <CardTitle className=\"text-center\">Mejores Puntuaciones</CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <Tabs defaultValue=\"singlePlayer\">\r\n          <TabsList className=\"grid w-full grid-cols-2\">\r\n            <TabsTrigger value=\"singlePlayer\">Un Jugador</TabsTrigger>\r\n            <TabsTrigger value=\"multiPlayer\">Multijugador</TabsTrigger>\r\n          </TabsList>\r\n          \r\n          <TabsContent value=\"singlePlayer\">\r\n            <div className=\"space-y-2\">\r\n              {scores.singlePlayer.map((score, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"flex justify-between items-center p-2 bg-gray-50 rounded\"\r\n                >\r\n                  <span className=\"font-medium\">{score.playerName}</span>\r\n                  <span className=\"text-gray-600\">{score.score} pts</span>\r\n                  <span className=\"text-sm text-gray-400\">{formatDate(score.date)}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </TabsContent>\r\n          \r\n          <TabsContent value=\"multiPlayer\">\r\n            <div className=\"space-y-2\">\r\n              {scores.multiPlayer.map((score, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"flex justify-between items-center p-2 bg-gray-50 rounded\"\r\n                >\r\n                  <div>\r\n                    <div className=\"font-medium\">{score.winner}</div>\r\n                    <div className=\"text-sm text-gray-500\">vs {score.loser}</div>\r\n                  </div>\r\n                  <span className=\"text-gray-600\">{score.score} pts</span>\r\n                  <span className=\"text-sm text-gray-400\">{formatDate(score.date)}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </TabsContent>\r\n        </Tabs>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ScoreBoard;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,UAAU,EAAEC,SAAS,EAAEC,WAAW,QAAQ,sBAAsB;AAC/E,SAASC,IAAI,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,WAAW,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC;IACnCgB,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE;EACf,CAAC,CAAC;EAEFhB,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,sCAAsC,CAAC;IAC5GP,SAAS,CAACG,WAAW,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,UAAU,GAAIC,UAAU,IAAK;IACjC,OAAO,IAAIC,IAAI,CAACD,UAAU,CAAC,CAACE,kBAAkB,CAAC,CAAC;EAClD,CAAC;EAED,oBACEf,OAAA,CAACT,IAAI;IAACyB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACvCjB,OAAA,CAACR,UAAU;MAAAyB,QAAA,eACTjB,OAAA,CAACP,SAAS;QAACuB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eACbrB,OAAA,CAACN,WAAW;MAAAuB,QAAA,eACVjB,OAAA,CAACL,IAAI;QAAC2B,YAAY,EAAC,cAAc;QAAAL,QAAA,gBAC/BjB,OAAA,CAACJ,QAAQ;UAACoB,SAAS,EAAC,yBAAyB;UAAAC,QAAA,gBAC3CjB,OAAA,CAACH,WAAW;YAAC0B,KAAK,EAAC,cAAc;YAAAN,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC,eAC1DrB,OAAA,CAACH,WAAW;YAAC0B,KAAK,EAAC,aAAa;YAAAN,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,eAEXrB,OAAA,CAACF,WAAW;UAACyB,KAAK,EAAC,cAAc;UAAAN,QAAA,eAC/BjB,OAAA;YAAKgB,SAAS,EAAC,WAAW;YAAAC,QAAA,EACvBd,MAAM,CAACE,YAAY,CAACmB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACpC1B,OAAA;cAEEgB,SAAS,EAAC,0DAA0D;cAAAC,QAAA,gBAEpEjB,OAAA;gBAAMgB,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAEQ,KAAK,CAACE;cAAU;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACvDrB,OAAA;gBAAMgB,SAAS,EAAC,eAAe;gBAAAC,QAAA,GAAEQ,KAAK,CAACA,KAAK,EAAC,MAAI;cAAA;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACxDrB,OAAA;gBAAMgB,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAEL,UAAU,CAACa,KAAK,CAACG,IAAI;cAAC;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA,GALlEK,KAAK;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMP,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC,eAEdrB,OAAA,CAACF,WAAW;UAACyB,KAAK,EAAC,aAAa;UAAAN,QAAA,eAC9BjB,OAAA;YAAKgB,SAAS,EAAC,WAAW;YAAAC,QAAA,EACvBd,MAAM,CAACG,WAAW,CAACkB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACnC1B,OAAA;cAEEgB,SAAS,EAAC,0DAA0D;cAAAC,QAAA,gBAEpEjB,OAAA;gBAAAiB,QAAA,gBACEjB,OAAA;kBAAKgB,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAEQ,KAAK,CAACI;gBAAM;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACjDrB,OAAA;kBAAKgB,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,GAAC,KAAG,EAACQ,KAAK,CAACK,KAAK;gBAAA;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1D,CAAC,eACNrB,OAAA;gBAAMgB,SAAS,EAAC,eAAe;gBAAAC,QAAA,GAAEQ,KAAK,CAACA,KAAK,EAAC,MAAI;cAAA;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACxDrB,OAAA;gBAAMgB,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAEL,UAAU,CAACa,KAAK,CAACG,IAAI;cAAC;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA,GARlEK,KAAK;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASP,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX,CAAC;AAACnB,EAAA,CAhEID,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAkEhB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}