{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David Maguire\\\\gaming\\\\src\\\\context\\\\GameContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { generateCards } from '../utils/gameUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isPlaying: false,\n  gameMode: null,\n  currentPlayer: 1,\n  players: {\n    1: {\n      name: 'Player 1',\n      score: 0,\n      matches: 0\n    },\n    2: {\n      name: 'Player 2',\n      score: 0,\n      matches: 0\n    }\n  },\n  cards: [],\n  selectedCards: [],\n  turnTimer: 30,\n  highScores: {\n    single: [],\n    multi: []\n  }\n};\nexport const GameContext = /*#__PURE__*/createContext();\nexport const useGame = () => {\n  _s();\n  return useContext(GameContext);\n};\n_s(useGame, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst gameReducer = (state, action) => {\n  switch (action.type) {\n    case 'START_GAME':\n      return {\n        ...state,\n        isPlaying: true,\n        gameMode: action.payload.mode,\n        cards: generateCards(),\n        turnTimer: 30,\n        selectedCards: [],\n        currentPlayer: 1\n      };\n    case 'RESET_GAME':\n      return {\n        ...initialState,\n        gameMode: state.gameMode\n      };\n    case 'SELECT_CARD':\n      // Start timer on first card click aadgbpiudgvpDASDV\n      if (!state.timerStarted && state.isPlaying) {\n        return {\n          ...state,\n          timerStarted: true,\n          selectedCards: [action.payload]\n        };\n      }\n      if (state.selectedCards.length >= 2) return state;\n      if (state.selectedCards.find(c => c.id === action.payload.id) || state.cards.find(c => c.id === action.payload.id).matched) {\n        return state;\n      }\n      return {\n        ...state,\n        selectedCards: [...state.selectedCards, action.payload]\n      };\n    case 'CHECK_MATCH':\n      const [first, second] = state.selectedCards;\n      const isMatch = first.value === second.value;\n      const currentScore = state.players[state.currentPlayer].score;\n      const matchPoints = 10;\n      const penaltyPoints = Math.min(currentScore, 2); // Never go below 0\n\n      return {\n        ...state,\n        cards: state.cards.map(card => isMatch && (card.id === first.id || card.id === second.id) ? {\n          ...card,\n          matched: true\n        } : card),\n        players: {\n          ...state.players,\n          [state.currentPlayer]: {\n            ...state.players[state.currentPlayer],\n            score: currentScore + (isMatch ? matchPoints : -penaltyPoints),\n            matches: isMatch ? state.players[state.currentPlayer].matches + 1 : state.players[state.currentPlayer].matches\n          }\n        },\n        currentPlayer: state.gameMode === 'multi' && !isMatch ? state.currentPlayer === 1 ? 2 : 1 : state.currentPlayer,\n        selectedCards: []\n      };\n    case 'UPDATE_TIMER':\n      if (state.turnTimer <= 0) {\n        return {\n          ...state,\n          isPlaying: false,\n          gameOver: true\n        };\n      }\n      return {\n        ...state,\n        turnTimer: state.turnTimer - 1\n      };\n    case 'END_GAME':\n      const winner = state.gameMode === 'multi' ? state.players[1].score > state.players[2].score ? state.players[1] : state.players[2] : state.players[1];\n      const newScore = {\n        playerName: winner.name,\n        score: winner.score,\n        date: new Date().toISOString(),\n        mode: state.gameMode\n      };\n      return {\n        ...state,\n        isPlaying: false,\n        gameOver: true,\n        winner,\n        highScores: {\n          ...state.highScores,\n          [state.gameMode]: [...(state.highScores[state.gameMode] || []), newScore].sort((a, b) => b.score - a.score).slice(0, 10)\n        }\n      };\n    default:\n      return state;\n  }\n};\nexport const GameProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(gameReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s2(GameProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","generateCards","jsxDEV","_jsxDEV","initialState","isPlaying","gameMode","currentPlayer","players","name","score","matches","cards","selectedCards","turnTimer","highScores","single","multi","GameContext","useGame","_s","gameReducer","state","action","type","payload","mode","timerStarted","length","find","c","id","matched","first","second","isMatch","value","currentScore","matchPoints","penaltyPoints","Math","min","map","card","gameOver","winner","newScore","playerName","date","Date","toISOString","sort","a","b","slice","GameProvider","children","_s2","dispatch","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/David Maguire/gaming/src/context/GameContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\nimport { generateCards } from '../utils/gameUtils';\r\n\r\nconst initialState = {\r\n  isPlaying: false,\r\n  gameMode: null,\r\n  currentPlayer: 1,\r\n  players: {\r\n    1: { name: 'Player 1', score: 0, matches: 0 },\r\n    2: { name: 'Player 2', score: 0, matches: 0 }\r\n  },\r\n  cards: [],\r\n  selectedCards: [],\r\n  turnTimer: 30,\r\n  highScores: {\r\n    single: [],\r\n    multi: []\r\n  }\r\n};\r\n\r\nexport const GameContext = createContext();\r\n\r\nexport const useGame = () => useContext(GameContext);\r\n\r\nconst gameReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'START_GAME':\r\n      return {\r\n        ...state,\r\n        isPlaying: true,\r\n        gameMode: action.payload.mode,\r\n        cards: generateCards(),\r\n        turnTimer: 30,\r\n        selectedCards: [],\r\n        currentPlayer: 1\r\n      };\r\n\r\n    case 'RESET_GAME':\r\n      return {\r\n        ...initialState,\r\n        gameMode: state.gameMode\r\n      };\r\n\r\n    case 'SELECT_CARD':\r\n      // Start timer on first card click aadgbpiudgvpDASDV\r\n      if (!state.timerStarted && state.isPlaying) {\r\n        return {\r\n          ...state,\r\n          timerStarted: true,\r\n          selectedCards: [action.payload]\r\n        };\r\n      }\r\n      \r\n      if (state.selectedCards.length >= 2) return state;\r\n      if (state.selectedCards.find(c => c.id === action.payload.id) || \r\n          state.cards.find(c => c.id === action.payload.id).matched) {\r\n        return state;\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        selectedCards: [...state.selectedCards, action.payload]\r\n      };\r\n\r\n    case 'CHECK_MATCH':\r\n      const [first, second] = state.selectedCards;\r\n      const isMatch = first.value === second.value;\r\n      const currentScore = state.players[state.currentPlayer].score;\r\n      const matchPoints = 10;\r\n      const penaltyPoints = Math.min(currentScore, 2); // Never go below 0\r\n\r\n      return {\r\n        ...state,\r\n        cards: state.cards.map(card => \r\n          isMatch && (card.id === first.id || card.id === second.id)\r\n            ? { ...card, matched: true }\r\n            : card\r\n        ),\r\n        players: {\r\n          ...state.players,\r\n          [state.currentPlayer]: {\r\n            ...state.players[state.currentPlayer],\r\n            score: currentScore + (isMatch ? matchPoints : -penaltyPoints),\r\n            matches: isMatch ? state.players[state.currentPlayer].matches + 1 : state.players[state.currentPlayer].matches\r\n          }\r\n        },\r\n        currentPlayer: state.gameMode === 'multi' && !isMatch\r\n          ? (state.currentPlayer === 1 ? 2 : 1)\r\n          : state.currentPlayer,\r\n        selectedCards: []\r\n      };\r\n\r\n    case 'UPDATE_TIMER':\r\n      if (state.turnTimer <= 0) {\r\n        return {\r\n          ...state,\r\n          isPlaying: false,\r\n          gameOver: true\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        turnTimer: state.turnTimer - 1\r\n      };\r\n\r\n    case 'END_GAME':\r\n      const winner = state.gameMode === 'multi' \r\n        ? state.players[1].score > state.players[2].score \r\n          ? state.players[1] \r\n          : state.players[2]\r\n        : state.players[1];\r\n\r\n      const newScore = {\r\n        playerName: winner.name,\r\n        score: winner.score,\r\n        date: new Date().toISOString(),\r\n        mode: state.gameMode\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        isPlaying: false,\r\n        gameOver: true,\r\n        winner,\r\n        highScores: {\r\n          ...state.highScores,\r\n          [state.gameMode]: [\r\n            ...state.highScores[state.gameMode] || [],\r\n            newScore\r\n          ].sort((a, b) => b.score - a.score).slice(0, 10)\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const GameProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(gameReducer, initialState);\r\n  return (\r\n    <GameContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}