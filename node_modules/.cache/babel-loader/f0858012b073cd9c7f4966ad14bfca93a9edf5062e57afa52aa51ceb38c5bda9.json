{"ast":null,"code":"import React from'react';import{Card,CardHeader,CardTitle,CardContent}from'../ui/card';import{useGame}from'../../context/GameContext';import{motion,AnimatePresence}from'framer-motion';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const ScoreBoard=()=>{var _state$highScores;const{state}=useGame();const scores=((_state$highScores=state.highScores)===null||_state$highScores===void 0?void 0:_state$highScores[state.gameMode])||[];return/*#__PURE__*/_jsxs(Card,{className:\"bg-black/30 backdrop-blur-sm border-2 border-cyan-500/20 max-w-md\",children:[/*#__PURE__*/_jsx(CardHeader,{className:\"p-4\",children:/*#__PURE__*/_jsxs(CardTitle,{className:\"text-lg font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-purple-400\",children:[\"High Scores - \",state.gameMode==='single'?'Single Player':'Multiplayer']})}),/*#__PURE__*/_jsx(CardContent,{className:\"p-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-h-[400px] overflow-y-auto scrollbar-thin scrollbar-track-black/20 \\r scrollbar-thumb-cyan-500/60\",children:/*#__PURE__*/_jsxs(AnimatePresence,{children:[scores.map((score,index)=>/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0,x:-20},animate:{opacity:1,x:0},exit:{opacity:0,x:20},transition:{delay:index*0.1},className:\"flex justify-between p-2 bg-black/40 rounded-lg border border-cyan-500/10\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-cyan-300 text-sm\",children:score.playerName}),/*#__PURE__*/_jsx(\"span\",{className:\"font-bold text-white text-sm\",children:score.score})]},`score-${score.date}-${index}`)),scores.length===0&&/*#__PURE__*/_jsx(motion.p,{initial:{opacity:0},animate:{opacity:1},className:\"text-center text-cyan-500/50 text-sm py-4\",children:\"No high scores yet!\"})]})})})]});};export default ScoreBoard;","map":{"version":3,"names":["React","Card","CardHeader","CardTitle","CardContent","useGame","motion","AnimatePresence","jsxs","_jsxs","jsx","_jsx","ScoreBoard","_state$highScores","state","scores","highScores","gameMode","className","children","map","score","index","div","initial","opacity","x","animate","exit","transition","delay","playerName","date","length","p"],"sources":["C:/Users/David Maguire/gaming/src/components/ScoreBoard/ScoreBoard.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Card, CardHeader, CardTitle, CardContent } from '../ui/card';\r\nimport { useGame } from '../../context/GameContext';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nconst ScoreBoard = () => {\r\n  const { state } = useGame();\r\n  const scores = state.highScores?.[state.gameMode] || [];\r\n\r\n  return (\r\n    <Card className=\"bg-black/30 backdrop-blur-sm border-2 border-cyan-500/20 max-w-md\">\r\n      <CardHeader className=\"p-4\">\r\n        <CardTitle className=\"text-lg font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-purple-400\">\r\n          High Scores - {state.gameMode === 'single' ? 'Single Player' : 'Multiplayer'}\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"p-4\">\r\n        <div className=\"max-h-[400px] overflow-y-auto scrollbar-thin scrollbar-track-black/20 \r\n                      scrollbar-thumb-cyan-500/60\">\r\n          <AnimatePresence>\r\n            {scores.map((score, index) => (\r\n              <motion.div\r\n                key={`score-${score.date}-${index}`}\r\n                initial={{ opacity: 0, x: -20 }}\r\n                animate={{ opacity: 1, x: 0 }}\r\n                exit={{ opacity: 0, x: 20 }}\r\n                transition={{ delay: index * 0.1 }}\r\n                className=\"flex justify-between p-2 bg-black/40 rounded-lg border border-cyan-500/10\"\r\n              >\r\n                <span className=\"text-cyan-300 text-sm\">{score.playerName}</span>\r\n                <span className=\"font-bold text-white text-sm\">{score.score}</span>\r\n              </motion.div>\r\n            ))}\r\n            {scores.length === 0 && (\r\n              <motion.p \r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                className=\"text-center text-cyan-500/50 text-sm py-4\"\r\n              >\r\n                No high scores yet!\r\n              </motion.p>\r\n            )}\r\n          </AnimatePresence>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ScoreBoard;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,IAAI,CAAEC,UAAU,CAAEC,SAAS,CAAEC,WAAW,KAAQ,YAAY,CACrE,OAASC,OAAO,KAAQ,2BAA2B,CACnD,OAASC,MAAM,CAAEC,eAAe,KAAQ,eAAe,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAExD,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,KAAAC,iBAAA,CACvB,KAAM,CAAEC,KAAM,CAAC,CAAGT,OAAO,CAAC,CAAC,CAC3B,KAAM,CAAAU,MAAM,CAAG,EAAAF,iBAAA,CAAAC,KAAK,CAACE,UAAU,UAAAH,iBAAA,iBAAhBA,iBAAA,CAAmBC,KAAK,CAACG,QAAQ,CAAC,GAAI,EAAE,CAEvD,mBACER,KAAA,CAACR,IAAI,EAACiB,SAAS,CAAC,mEAAmE,CAAAC,QAAA,eACjFR,IAAA,CAACT,UAAU,EAACgB,SAAS,CAAC,KAAK,CAAAC,QAAA,cACzBV,KAAA,CAACN,SAAS,EAACe,SAAS,CAAC,8FAA8F,CAAAC,QAAA,EAAC,gBACpG,CAACL,KAAK,CAACG,QAAQ,GAAK,QAAQ,CAAG,eAAe,CAAG,aAAa,EACnE,CAAC,CACF,CAAC,cACbN,IAAA,CAACP,WAAW,EAACc,SAAS,CAAC,KAAK,CAAAC,QAAA,cAC1BR,IAAA,QAAKO,SAAS,CAAC,sGAC2B,CAAAC,QAAA,cACxCV,KAAA,CAACF,eAAe,EAAAY,QAAA,EACbJ,MAAM,CAACK,GAAG,CAAC,CAACC,KAAK,CAAEC,KAAK,gBACvBb,KAAA,CAACH,MAAM,CAACiB,GAAG,EAETC,OAAO,CAAE,CAAEC,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAC,EAAG,CAAE,CAChCC,OAAO,CAAE,CAAEF,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAE,CAC9BE,IAAI,CAAE,CAAEH,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,EAAG,CAAE,CAC5BG,UAAU,CAAE,CAAEC,KAAK,CAAER,KAAK,CAAG,GAAI,CAAE,CACnCJ,SAAS,CAAC,2EAA2E,CAAAC,QAAA,eAErFR,IAAA,SAAMO,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAEE,KAAK,CAACU,UAAU,CAAO,CAAC,cACjEpB,IAAA,SAAMO,SAAS,CAAC,8BAA8B,CAAAC,QAAA,CAAEE,KAAK,CAACA,KAAK,CAAO,CAAC,GAR9D,SAASA,KAAK,CAACW,IAAI,IAAIV,KAAK,EASvB,CACb,CAAC,CACDP,MAAM,CAACkB,MAAM,GAAK,CAAC,eAClBtB,IAAA,CAACL,MAAM,CAAC4B,CAAC,EACPV,OAAO,CAAE,CAAEC,OAAO,CAAE,CAAE,CAAE,CACxBE,OAAO,CAAE,CAAEF,OAAO,CAAE,CAAE,CAAE,CACxBP,SAAS,CAAC,2CAA2C,CAAAC,QAAA,CACtD,qBAED,CAAU,CACX,EACc,CAAC,CACf,CAAC,CACK,CAAC,EACV,CAAC,CAEX,CAAC,CAED,cAAe,CAAAP,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}