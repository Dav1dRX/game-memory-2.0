{"ast":null,"code":"import React,{createContext,useContext,useReducer,useEffect}from'react';import{generateCards}from'../utils/gameUtils';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={isPlaying:false,gameMode:null,currentPlayer:1,players:{1:{name:'Player 1',score:0,matches:0},2:{name:'Player 2',score:0,matches:0}},cards:[],selectedCards:[],turnTimer:60,// Cambiado de 30 a 60 segundos\nhighScores:JSON.parse(localStorage.getItem('memory-game-scores')||'{\"single\":[], \"multi\":[]}')};export const GameContext=/*#__PURE__*/createContext();export const useGame=()=>useContext(GameContext);const gameReducer=(state,action)=>{switch(action.type){case'START_GAME':return{...initialState,isPlaying:true,gameOver:false,// Explicitly reset gameOver\ngameMode:action.payload.mode,cards:generateCards(),highScores:state.highScores,// Preserve high scores\nplayers:{1:{id:1,name:action.payload.mode==='single'?'Player':'Player 1',score:0,matches:0},...(action.payload.mode==='multi'&&{2:{id:2,name:'Player 2',score:0,matches:0}})}};case'RESET_GAME':return{...initialState,gameMode:state.gameMode,highScores:state.highScores};case'SELECT_CARD':// Start timer on first card click\nif(!state.timerStarted){return{...state,timerStarted:true,selectedCards:[action.payload]};}if(state.selectedCards.length>=2)return state;return{...state,selectedCards:[...state.selectedCards,action.payload]};case'CHECK_MATCH':const[first,second]=state.selectedCards;const isMatch=first.value===second.value;const currentScore=state.players[state.currentPlayer].score;const matchPoints=10;const penaltyPoints=Math.min(currentScore,2);return{...state,cards:state.cards.map(card=>isMatch&&(card.id===first.id||card.id===second.id)?{...card,matched:true}:card),players:{...state.players,[state.currentPlayer]:{...state.players[state.currentPlayer],score:currentScore+(isMatch?matchPoints:-penaltyPoints),matches:isMatch?state.players[state.currentPlayer].matches+1:state.players[state.currentPlayer].matches}},currentPlayer:state.gameMode==='multi'&&!isMatch?state.currentPlayer===1?2:1:state.currentPlayer,selectedCards:[]};case'UPDATE_TIMER':if(state.turnTimer<=0){const currentPlayer=state.players[state.currentPlayer];const newScore={playerName:state.gameMode==='single'?'You':currentPlayer.name,score:currentPlayer.score,date:new Date().toISOString(),mode:state.gameMode,id:Date.now()// Add unique ID to prevent duplicates\n};// Get existing scores\nconst savedScores=JSON.parse(localStorage.getItem('memory-game-scores')||'{\"single\":[], \"multi\":[]}');// Check for duplicates and add new score\nconst currentModeScores=savedScores[state.gameMode];if(!currentModeScores.some(score=>score.id===newScore.id)){currentModeScores.push(newScore);currentModeScores.sort((a,b)=>b.score-a.score);savedScores[state.gameMode]=currentModeScores.slice(0,10);localStorage.setItem('memory-game-scores',JSON.stringify(savedScores));}return{...state,isPlaying:false,gameOver:true,winner:{name:state.gameMode==='single'?'You':currentPlayer.name,score:currentPlayer.score},highScores:savedScores};}return{...state,turnTimer:state.turnTimer-1};case'END_GAME':const winner=state.gameMode==='multi'?state.players[1].score>state.players[2].score?state.players[1]:state.players[2]:state.players[1];const newScore={playerName:winner.name,score:winner.score,date:new Date().toISOString(),mode:state.gameMode};// Save to localStorage\nconst savedScores=JSON.parse(localStorage.getItem('memory-game-scores')||'{\"single\":[], \"multi\":[]}');savedScores[state.gameMode].push(newScore);savedScores[state.gameMode].sort((a,b)=>b.score-a.score);savedScores[state.gameMode]=savedScores[state.gameMode].slice(0,10);localStorage.setItem('memory-game-scores',JSON.stringify(savedScores));return{...state,isPlaying:false,gameOver:true,winner:{name:winner.name,score:winner.score},highScores:savedScores};case'PLAY_AGAIN':return{...initialState,gameMode:state.gameMode,highScores:state.highScores,isPlaying:true,cards:generateCards()};case'SYNC_SCORES':return{...state,highScores:action.payload};default:return state;}};export const GameProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(gameReducer,initialState);// Efecto para sincronizar puntajes\nuseEffect(()=>{const loadScores=()=>{const savedScores=JSON.parse(localStorage.getItem('memory-game-scores')||'{\"single\":[], \"multi\":[]}');dispatch({type:'SYNC_SCORES',payload:savedScores});};window.addEventListener('storage',loadScores);loadScores();// Carga inicial\nreturn()=>window.removeEventListener('storage',loadScores);},[]);return/*#__PURE__*/_jsx(GameContext.Provider,{value:{state,dispatch},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","generateCards","jsx","_jsx","initialState","isPlaying","gameMode","currentPlayer","players","name","score","matches","cards","selectedCards","turnTimer","highScores","JSON","parse","localStorage","getItem","GameContext","useGame","gameReducer","state","action","type","gameOver","payload","mode","id","timerStarted","length","first","second","isMatch","value","currentScore","matchPoints","penaltyPoints","Math","min","map","card","matched","newScore","playerName","date","Date","toISOString","now","savedScores","currentModeScores","some","push","sort","a","b","slice","setItem","stringify","winner","GameProvider","_ref","children","dispatch","loadScores","window","addEventListener","removeEventListener","Provider"],"sources":["C:/Users/David Maguire/gaming/src/context/GameContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { generateCards } from '../utils/gameUtils';\r\n\r\nconst initialState = {\r\n  isPlaying: false,\r\n  gameMode: null,\r\n  currentPlayer: 1,\r\n  players: {\r\n    1: { name: 'Player 1', score: 0, matches: 0 },\r\n    2: { name: 'Player 2', score: 0, matches: 0 }\r\n  },\r\n  cards: [],\r\n  selectedCards: [],\r\n  turnTimer: 60, // Cambiado de 30 a 60 segundos\r\n  highScores: JSON.parse(\r\n    localStorage.getItem('memory-game-scores') || \r\n    '{\"single\":[], \"multi\":[]}'\r\n  )\r\n};\r\n\r\nexport const GameContext = createContext();\r\n\r\nexport const useGame = () => useContext(GameContext);\r\n\r\nconst gameReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'START_GAME':\r\n      return {\r\n        ...initialState,\r\n        isPlaying: true,\r\n        gameOver: false, // Explicitly reset gameOver\r\n        gameMode: action.payload.mode,\r\n        cards: generateCards(),\r\n        highScores: state.highScores, // Preserve high scores\r\n        players: {\r\n          1: {\r\n            id: 1,\r\n            name: action.payload.mode === 'single' ? 'Player' : 'Player 1',\r\n            score: 0,\r\n            matches: 0\r\n          },\r\n          ...(action.payload.mode === 'multi' && {\r\n            2: {\r\n              id: 2,\r\n              name: 'Player 2',\r\n              score: 0,\r\n              matches: 0\r\n            }\r\n          })\r\n        }\r\n      };\r\n\r\n    case 'RESET_GAME':\r\n      return {\r\n        ...initialState,\r\n        gameMode: state.gameMode,\r\n        highScores: state.highScores \r\n      };\r\n\r\n    case 'SELECT_CARD':\r\n      // Start timer on first card click\r\n      if (!state.timerStarted) {\r\n        return {\r\n          ...state,\r\n          timerStarted: true,\r\n          selectedCards: [action.payload]\r\n        };\r\n      }\r\n      \r\n      if (state.selectedCards.length >= 2) return state;\r\n      return {\r\n        ...state,\r\n        selectedCards: [...state.selectedCards, action.payload]\r\n      };\r\n\r\n    case 'CHECK_MATCH':\r\n      const [first, second] = state.selectedCards;\r\n      const isMatch = first.value === second.value;\r\n      const currentScore = state.players[state.currentPlayer].score;\r\n      const matchPoints = 10;\r\n      const penaltyPoints = Math.min(currentScore, 2); \r\n\r\n      return {\r\n        ...state,\r\n        cards: state.cards.map(card => \r\n          isMatch && (card.id === first.id || card.id === second.id)\r\n            ? { ...card, matched: true }\r\n            : card\r\n        ),\r\n        players: {\r\n          ...state.players,\r\n          [state.currentPlayer]: {\r\n            ...state.players[state.currentPlayer],\r\n            score: currentScore + (isMatch ? matchPoints : -penaltyPoints),\r\n            matches: isMatch ? state.players[state.currentPlayer].matches + 1 : state.players[state.currentPlayer].matches\r\n          }\r\n        },\r\n        currentPlayer: state.gameMode === 'multi' && !isMatch\r\n          ? (state.currentPlayer === 1 ? 2 : 1)\r\n          : state.currentPlayer,\r\n        selectedCards: []\r\n      };\r\n\r\n    case 'UPDATE_TIMER':\r\n      if (state.turnTimer <= 0) {\r\n        const currentPlayer = state.players[state.currentPlayer];\r\n        const newScore = {\r\n          playerName: state.gameMode === 'single' ? 'You' : currentPlayer.name,\r\n          score: currentPlayer.score,\r\n          date: new Date().toISOString(),\r\n          mode: state.gameMode,\r\n          id: Date.now() // Add unique ID to prevent duplicates\r\n        };\r\n\r\n        // Get existing scores\r\n        const savedScores = JSON.parse(\r\n          localStorage.getItem('memory-game-scores') || \r\n          '{\"single\":[], \"multi\":[]}'\r\n        );\r\n\r\n        // Check for duplicates and add new score\r\n        const currentModeScores = savedScores[state.gameMode];\r\n        if (!currentModeScores.some(score => score.id === newScore.id)) {\r\n          currentModeScores.push(newScore);\r\n          currentModeScores.sort((a, b) => b.score - a.score);\r\n          savedScores[state.gameMode] = currentModeScores.slice(0, 10);\r\n          localStorage.setItem('memory-game-scores', JSON.stringify(savedScores));\r\n        }\r\n\r\n        return {\r\n          ...state,\r\n          isPlaying: false,\r\n          gameOver: true,\r\n          winner: {\r\n            name: state.gameMode === 'single' ? 'You' : currentPlayer.name,\r\n            score: currentPlayer.score\r\n          },\r\n          highScores: savedScores\r\n        };\r\n      }\r\n      return { ...state, turnTimer: state.turnTimer - 1 };\r\n\r\n    case 'END_GAME':\r\n      const winner = state.gameMode === 'multi' \r\n        ? state.players[1].score > state.players[2].score \r\n          ? state.players[1] \r\n          : state.players[2]\r\n        : state.players[1];\r\n\r\n      const newScore = {\r\n        playerName: winner.name,\r\n        score: winner.score,\r\n        date: new Date().toISOString(),\r\n        mode: state.gameMode\r\n      };\r\n\r\n      // Save to localStorage\r\n      const savedScores = JSON.parse(localStorage.getItem('memory-game-scores') || '{\"single\":[], \"multi\":[]}');\r\n      savedScores[state.gameMode].push(newScore);\r\n      savedScores[state.gameMode].sort((a, b) => b.score - a.score);\r\n      savedScores[state.gameMode] = savedScores[state.gameMode].slice(0, 10);\r\n      localStorage.setItem('memory-game-scores', JSON.stringify(savedScores));\r\n\r\n      return {\r\n        ...state,\r\n        isPlaying: false,\r\n        gameOver: true,\r\n        winner: {\r\n          name: winner.name,\r\n          score: winner.score\r\n        },\r\n        highScores: savedScores\r\n      };\r\n\r\n    case 'PLAY_AGAIN':\r\n      return {\r\n        ...initialState,\r\n        gameMode: state.gameMode,\r\n        highScores: state.highScores,\r\n        isPlaying: true,\r\n        cards: generateCards(),\r\n      };\r\n\r\n    case 'SYNC_SCORES':\r\n      return {\r\n        ...state,\r\n        highScores: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const GameProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(gameReducer, initialState);\r\n\r\n  // Efecto para sincronizar puntajes\r\n  useEffect(() => {\r\n    const loadScores = () => {\r\n      const savedScores = JSON.parse(\r\n        localStorage.getItem('memory-game-scores') || \r\n        '{\"single\":[], \"multi\":[]}'\r\n      );\r\n      dispatch({\r\n        type: 'SYNC_SCORES',\r\n        payload: savedScores\r\n      });\r\n    };\r\n\r\n    window.addEventListener('storage', loadScores);\r\n    loadScores(); // Carga inicial\r\n\r\n    return () => window.removeEventListener('storage', loadScores);\r\n  }, []);\r\n\r\n  return (\r\n    <GameContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}