{"ast":null,"code":"import React,{createContext,useContext,useReducer,useEffect,useCallback}from'react';import{generateCards}from'../utils/gameUtils';// Constants\nimport{jsx as _jsx}from\"react/jsx-runtime\";const MATCH_POINTS=10;const MIN_PENALTY=2;const DEFAULT_TIMER=60;const MAX_HIGH_SCORES=10;const initialState={isPlaying:false,gameMode:null,currentPlayer:1,players:{1:{name:'Player 1',score:0,matches:0},2:{name:'Player 2',score:0,matches:0}},cards:[],selectedCards:[],turnTimer:DEFAULT_TIMER,timerStarted:false,gameOver:false,winner:null,highScores:JSON.parse(localStorage.getItem('memory-game-scores')||'{\"single\":[], \"multi\":[]}')};export const GameContext=/*#__PURE__*/createContext();export const useGame=()=>{const context=useContext(GameContext);if(!context){throw new Error('useGame must be used within a GameProvider');}return context;};const gameReducer=(state,action)=>{switch(action.type){case'START_GAME':{const{mode}=action.payload;return{...initialState,isPlaying:true,gameOver:false,gameMode:mode,cards:generateCards(),highScores:state.highScores,players:{1:{id:1,name:mode==='single'?'Player':'Player 1',score:0,matches:0},...(mode==='multi'&&{2:{id:2,name:'Player 2',score:0,matches:0}})}};}case'RESET_GAME':{return{...initialState,gameMode:state.gameMode,highScores:state.highScores};}case'SELECT_CARD':{if(state.selectedCards.length>=2)return state;const newState={...state,selectedCards:[...state.selectedCards,action.payload]};if(!state.timerStarted){newState.timerStarted=true;}return newState;}case'CHECK_MATCH':{const[first,second]=state.selectedCards;const isMatch=first.value===second.value;const currentScore=state.players[state.currentPlayer].score;const penaltyPoints=Math.min(currentScore,MIN_PENALTY);const updatedCards=state.cards.map(card=>isMatch&&(card.id===first.id||card.id===second.id)?{...card,matched:true}:card);const allMatched=updatedCards.every(card=>card.matched);const updatedState={...state,cards:updatedCards,players:{...state.players,[state.currentPlayer]:{...state.players[state.currentPlayer],score:currentScore+(isMatch?MATCH_POINTS:-penaltyPoints),matches:isMatch?state.players[state.currentPlayer].matches+1:state.players[state.currentPlayer].matches}},currentPlayer:state.gameMode==='multi'&&!isMatch?state.currentPlayer===1?2:1:state.currentPlayer,selectedCards:[]};if(allMatched){return handleGameEnd(updatedState);}return updatedState;}case'UPDATE_TIMER':{if(state.turnTimer<=0){return handleGameEnd(state);}return{...state,turnTimer:state.turnTimer-1};}case'PLAY_AGAIN':{return{...initialState,gameMode:state.gameMode,highScores:state.highScores,isPlaying:true,cards:generateCards()};}case'SYNC_SCORES':{return{...state,highScores:action.payload};}default:return state;}};const handleGameEnd=state=>{const currentPlayer=state.players[state.currentPlayer];const winner=state.gameMode==='multi'?state.players[1].score>state.players[2].score?state.players[1]:state.players[2]:currentPlayer;const newScore={playerName:state.gameMode==='single'?'You':winner.name,score:winner.score,date:new Date().toISOString(),mode:state.gameMode,id:Date.now()};const savedScores=JSON.parse(localStorage.getItem('memory-game-scores')||'{\"single\":[], \"multi\":[]}');const currentModeScores=savedScores[state.gameMode];if(!currentModeScores.some(score=>score.id===newScore.id)){currentModeScores.push(newScore);currentModeScores.sort((a,b)=>b.score-a.score);savedScores[state.gameMode]=currentModeScores.slice(0,MAX_HIGH_SCORES);localStorage.setItem('memory-game-scores',JSON.stringify(savedScores));}return{...state,isPlaying:false,gameOver:true,winner:{name:winner.name,score:winner.score},highScores:savedScores};};export const GameProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(gameReducer,initialState);const syncScores=useCallback(()=>{const savedScores=JSON.parse(localStorage.getItem('memory-game-scores')||'{\"single\":[], \"multi\":[]}');dispatch({type:'SYNC_SCORES',payload:savedScores});},[]);useEffect(()=>{window.addEventListener('storage',syncScores);syncScores();// Initial load\nreturn()=>window.removeEventListener('storage',syncScores);},[syncScores]);const value={state,dispatch,actions:{startGame:mode=>dispatch({type:'START_GAME',payload:{mode}}),resetGame:()=>dispatch({type:'RESET_GAME'}),selectCard:card=>dispatch({type:'SELECT_CARD',payload:card}),checkMatch:()=>dispatch({type:'CHECK_MATCH'}),updateTimer:()=>dispatch({type:'UPDATE_TIMER'}),playAgain:()=>dispatch({type:'PLAY_AGAIN'})}};return/*#__PURE__*/_jsx(GameContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useCallback","generateCards","jsx","_jsx","MATCH_POINTS","MIN_PENALTY","DEFAULT_TIMER","MAX_HIGH_SCORES","initialState","isPlaying","gameMode","currentPlayer","players","name","score","matches","cards","selectedCards","turnTimer","timerStarted","gameOver","winner","highScores","JSON","parse","localStorage","getItem","GameContext","useGame","context","Error","gameReducer","state","action","type","mode","payload","id","length","newState","first","second","isMatch","value","currentScore","penaltyPoints","Math","min","updatedCards","map","card","matched","allMatched","every","updatedState","handleGameEnd","newScore","playerName","date","Date","toISOString","now","savedScores","currentModeScores","some","push","sort","a","b","slice","setItem","stringify","GameProvider","_ref","children","dispatch","syncScores","window","addEventListener","removeEventListener","actions","startGame","resetGame","selectCard","checkMatch","updateTimer","playAgain","Provider"],"sources":["C:/Users/David Maguire/gaming/src/context/GameContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useCallback } from 'react';\r\nimport { generateCards } from '../utils/gameUtils';\r\n\r\n// Constants\r\nconst MATCH_POINTS = 10;\r\nconst MIN_PENALTY = 2;\r\nconst DEFAULT_TIMER = 60;\r\nconst MAX_HIGH_SCORES = 10;\r\n\r\nconst initialState = {\r\n  isPlaying: false,\r\n  gameMode: null,\r\n  currentPlayer: 1,\r\n  players: {\r\n    1: { name: 'Player 1', score: 0, matches: 0 },\r\n    2: { name: 'Player 2', score: 0, matches: 0 }\r\n  },\r\n  cards: [],\r\n  selectedCards: [],\r\n  turnTimer: DEFAULT_TIMER,\r\n  timerStarted: false,\r\n  gameOver: false,\r\n  winner: null,\r\n  highScores: JSON.parse(\r\n    localStorage.getItem('memory-game-scores') || \r\n    '{\"single\":[], \"multi\":[]}'\r\n  )\r\n};\r\n\r\nexport const GameContext = createContext();\r\n\r\nexport const useGame = () => {\r\n  const context = useContext(GameContext);\r\n  if (!context) {\r\n    throw new Error('useGame must be used within a GameProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nconst gameReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'START_GAME': {\r\n      const { mode } = action.payload;\r\n      return {\r\n        ...initialState,\r\n        isPlaying: true,\r\n        gameOver: false,\r\n        gameMode: mode,\r\n        cards: generateCards(),\r\n        highScores: state.highScores,\r\n        players: {\r\n          1: {\r\n            id: 1,\r\n            name: mode === 'single' ? 'Player' : 'Player 1',\r\n            score: 0,\r\n            matches: 0\r\n          },\r\n          ...(mode === 'multi' && {\r\n            2: {\r\n              id: 2,\r\n              name: 'Player 2',\r\n              score: 0,\r\n              matches: 0\r\n            }\r\n          })\r\n        }\r\n      };\r\n    }\r\n\r\n    case 'RESET_GAME': {\r\n      return {\r\n        ...initialState,\r\n        gameMode: state.gameMode,\r\n        highScores: state.highScores\r\n      };\r\n    }\r\n\r\n    case 'SELECT_CARD': {\r\n      if (state.selectedCards.length >= 2) return state;\r\n      \r\n      const newState = {\r\n        ...state,\r\n        selectedCards: [...state.selectedCards, action.payload]\r\n      };\r\n\r\n      if (!state.timerStarted) {\r\n        newState.timerStarted = true;\r\n      }\r\n\r\n      return newState;\r\n    }\r\n\r\n    case 'CHECK_MATCH': {\r\n      const [first, second] = state.selectedCards;\r\n      const isMatch = first.value === second.value;\r\n      const currentScore = state.players[state.currentPlayer].score;\r\n      const penaltyPoints = Math.min(currentScore, MIN_PENALTY);\r\n\r\n      const updatedCards = state.cards.map(card => \r\n        isMatch && (card.id === first.id || card.id === second.id)\r\n          ? { ...card, matched: true }\r\n          : card\r\n      );\r\n\r\n      const allMatched = updatedCards.every(card => card.matched);\r\n\r\n      const updatedState = {\r\n        ...state,\r\n        cards: updatedCards,\r\n        players: {\r\n          ...state.players,\r\n          [state.currentPlayer]: {\r\n            ...state.players[state.currentPlayer],\r\n            score: currentScore + (isMatch ? MATCH_POINTS : -penaltyPoints),\r\n            matches: isMatch ? state.players[state.currentPlayer].matches + 1 : state.players[state.currentPlayer].matches\r\n          }\r\n        },\r\n        currentPlayer: state.gameMode === 'multi' && !isMatch\r\n          ? (state.currentPlayer === 1 ? 2 : 1)\r\n          : state.currentPlayer,\r\n        selectedCards: []\r\n      };\r\n\r\n      if (allMatched) {\r\n        return handleGameEnd(updatedState);\r\n      }\r\n\r\n      return updatedState;\r\n    }\r\n\r\n    case 'UPDATE_TIMER': {\r\n      if (state.turnTimer <= 0) {\r\n        return handleGameEnd(state);\r\n      }\r\n      return { ...state, turnTimer: state.turnTimer - 1 };\r\n    }\r\n\r\n    case 'PLAY_AGAIN': {\r\n      return {\r\n        ...initialState,\r\n        gameMode: state.gameMode,\r\n        highScores: state.highScores,\r\n        isPlaying: true,\r\n        cards: generateCards(),\r\n      };\r\n    }\r\n\r\n    case 'SYNC_SCORES': {\r\n      return {\r\n        ...state,\r\n        highScores: action.payload\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst handleGameEnd = (state) => {\r\n  const currentPlayer = state.players[state.currentPlayer];\r\n  const winner = state.gameMode === 'multi'\r\n    ? state.players[1].score > state.players[2].score\r\n      ? state.players[1]\r\n      : state.players[2]\r\n    : currentPlayer;\r\n\r\n  const newScore = {\r\n    playerName: state.gameMode === 'single' ? 'You' : winner.name,\r\n    score: winner.score,\r\n    date: new Date().toISOString(),\r\n    mode: state.gameMode,\r\n    id: Date.now()\r\n  };\r\n\r\n  const savedScores = JSON.parse(\r\n    localStorage.getItem('memory-game-scores') ||\r\n    '{\"single\":[], \"multi\":[]}'\r\n  );\r\n\r\n  const currentModeScores = savedScores[state.gameMode];\r\n  if (!currentModeScores.some(score => score.id === newScore.id)) {\r\n    currentModeScores.push(newScore);\r\n    currentModeScores.sort((a, b) => b.score - a.score);\r\n    savedScores[state.gameMode] = currentModeScores.slice(0, MAX_HIGH_SCORES);\r\n    localStorage.setItem('memory-game-scores', JSON.stringify(savedScores));\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isPlaying: false,\r\n    gameOver: true,\r\n    winner: {\r\n      name: winner.name,\r\n      score: winner.score\r\n    },\r\n    highScores: savedScores\r\n  };\r\n};\r\n\r\nexport const GameProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(gameReducer, initialState);\r\n\r\n  const syncScores = useCallback(() => {\r\n    const savedScores = JSON.parse(\r\n      localStorage.getItem('memory-game-scores') ||\r\n      '{\"single\":[], \"multi\":[]}'\r\n    );\r\n    dispatch({\r\n      type: 'SYNC_SCORES',\r\n      payload: savedScores\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('storage', syncScores);\r\n    syncScores(); // Initial load\r\n\r\n    return () => window.removeEventListener('storage', syncScores);\r\n  }, [syncScores]);\r\n\r\n  const value = {\r\n    state,\r\n    dispatch,\r\n    actions: {\r\n      startGame: (mode) => dispatch({ type: 'START_GAME', payload: { mode } }),\r\n      resetGame: () => dispatch({ type: 'RESET_GAME' }),\r\n      selectCard: (card) => dispatch({ type: 'SELECT_CARD', payload: card }),\r\n      checkMatch: () => dispatch({ type: 'CHECK_MATCH' }),\r\n      updateTimer: () => dispatch({ type: 'UPDATE_TIMER' }),\r\n      playAgain: () => dispatch({ type: 'PLAY_AGAIN' })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GameContext.Provider value={value}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}